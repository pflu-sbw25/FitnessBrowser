#!/usr/bin/perl -w

#######################################################
## orgGroup.cgi
##
## Copyright (c) 2015 University of California
##
## Authors:
## Victoria Lo and Morgan Price
#######################################################
#
# This page generates the overall results for a single 
# organism, with a link to download the file of all 
# experimental results (generated by createExpData.cgi) 
# in addition to a table with overall data, linking to 
# pages with the individual expGroup results.
#
# Required CGI parameters:
# orgId -- which organism to search for

use strict;
use CGI qw(:standard Vars);
use CGI::Carp qw(warningsToBrowser fatalsToBrowser);
use DBI;

use lib "../lib";
use Utils;
use URI::Escape;

my $cgi=CGI->new;

my $orgId = $cgi->param('orgId') || die "No orgId parameter";
my $expGroup = $cgi->param('expGroup');
my $condition_1 = $cgi->param('condition_1'); 

my $style = Utils::get_style();
my $dbh = Utils::get_dbh();
my $orginfo = Utils::orginfo($dbh);
Utils::fail($cgi, "Unknown organism: $orgId") unless $orgId eq "" || exists $orginfo->{$orgId};

# main table
# gather data and slice it into an array of hashes
my $cond = $dbh->selectall_arrayref(qq{SELECT orgId, expGroup, COUNT(DISTINCT condition_1) AS nCond, COUNT(*) as nExp FROM Experiment WHERE orgId=? GROUP BY expGroup ORDER BY expGroup; },
    { Slice => {} },
    $orgId);


# gather number of genes and data
my $numGenes = $dbh->selectrow_array(qq{SELECT COUNT (DISTINCT locusId) FROM Gene WHERE orgId = ?;}, undef, $orgId);
my $numData = $dbh->selectrow_array(qq{SELECT COUNT (DISTINCT locusId) FROM GeneFitness WHERE orgId = ?;}, undef, $orgId);


# write the title
my $title = scalar(@$cond) > 0 ? "$orginfo->{$orgId}{division}: $orginfo->{$orgId}{genome}" : "No experiments for this organism.";
my $start = Utils::start_page("$title");

print
    header,
    $start, '<div id="ntcontent">',
    h2($title);

#exit if no results
Utils::fail($cgi, "No experiments for this organism.") if @$cond == 0;

#create table
my @headings = qw{Organism Group Conditions Experiments};
my @trows = ( Tr({ -valign => 'top', -align => 'center' }, map { th($_) } \@headings) );
foreach my $row (@$cond) {
    push @trows, Tr({ -valign => 'top', -align => 'left' },
                    td([ $orginfo-> {$row->{orgId}}{genome}, #organism
                         $row->{expGroup} || "unrecorded", #group
                         $row->{nCond}, #conditions
                         a( { href => "exps.cgi?orgId=$orgId&expGroup=" . uri_escape($row->{expGroup}) },
                            $row->{nExp} ), #experiments
                       ]));
}

#display taxonomic information and link
if ((defined $orginfo->{$orgId}{taxonomyId}) && ($orginfo->{$orgId}{taxonomyId} ne "")) {
	print $cgi->p("NCBI taxonomy id:", $cgi->a({href => "http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=$orginfo->{$orgId}{taxonomyId}"}, $orginfo->{$orgId}{taxonomyId}));
}

print
    p("Fitness data for $numData genes of $numGenes genes."),
    h3("Fitness Experiments"),
    table({cellspacing => 0, cellpadding => 3}, @trows);

#file of experimental data - generated by createExpData.cgi
# my $data = `./createExpData.cgi orgId=$orgId`;
print h3("Downloads"),
    $cgi->li(a({href => "createFitData.cgi?orgId=$orgId"}, "Fitness values"), "(tab-delimited, slow)"), 
    $cgi->li($cgi->a({href => "createCofitData.cgi?orgId=$orgId"}, "Top cofitness for each gene"), "(tab-delimited)"),
    $cgi->li(a({href => "createExpData.cgi?orgId=$orgId"}, "Experiment meta-data"), "(tab-delimited)"),
    $cgi->li(a({href => "orgSeqs.cgi?orgId=$orgId"}, "Protein sequences"), "(fasta)"),
    "</UL>";

$dbh->disconnect();
Utils::endHtml($cgi);
